{"remainingRequest":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/babel-loader/lib/index.js!/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/src/views/table/Reports.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/src/views/table/Reports.vue","mtime":1616750702767},{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvaG9tZS9tYXJrYW50aG9ueXZhbGUvZGV2L25ld3MtZXh0cmFjdG9yLWFkbWluL2Zyb250ZW5kL2FkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gInZ1ZXgiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRpYWxvZzogZmFsc2UsCiAgICAgIGRpYWxvZ0RlbGV0ZTogZmFsc2UsCiAgICAgIGhlYWRlcnM6IFt7CiAgICAgICAgdGV4dDogIkRhdGEiLAogICAgICAgIGFsaWduOiAiY2VudGVyIiwKICAgICAgICBzb3J0YWJsZTogdHJ1ZSwKICAgICAgICB2YWx1ZTogImRhdGEiCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiQXJ0aWNsZXMiLAogICAgICAgIHZhbHVlOiAiYXJ0aWNsZXMiCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiU3VjY2Vzc2Z1bCBwYXJzZWQgYXJ0aWNsZXMiLAogICAgICAgIHZhbHVlOiAic3VjY2Vzc19wYXJzZSIKICAgICAgfSwgewogICAgICAgIHRleHQ6ICJVbnN1Y2Nlc3NmdWwgcGFyc2UgYXJ0aWNsZXMiLAogICAgICAgIHZhbHVlOiAidW5zdWNjZXNzX3BhcnNlIgogICAgICB9LCB7CiAgICAgICAgdGV4dDogIk1pc3NlZCBhcnRpY2xlcyIsCiAgICAgICAgdmFsdWU6ICJtaXNzZWRfYXJ0aWNsZXMiCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiQXZlcmFnZSBkb3dubG9hZCBsYXRlbmN5IiwKICAgICAgICB2YWx1ZTogImRvd25sb2FkX2xhdGVuY3kiCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiU3BpZGVycyIsCiAgICAgICAgdmFsdWU6ICJzcGlkZXJzIgogICAgICB9LCB7CiAgICAgICAgdGV4dDogIlRocmVhZHMiLAogICAgICAgIHZhbHVlOiAidGhyZWFkcyIKICAgICAgfSwgewogICAgICAgIHRleHQ6ICJUaW1lIGZpbmlzaGVkIiwKICAgICAgICB2YWx1ZTogInRpbWVfZmluaXNoZWQiCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiRGF0ZSIsCiAgICAgICAgdmFsdWU6ICJkYXRlIgogICAgICB9LCB7CiAgICAgICAgdGV4dDogIkFjdGlvbnMiLAogICAgICAgIHZhbHVlOiAiYWN0aW9ucyIsCiAgICAgICAgc29ydGFibGU6IGZhbHNlCiAgICAgIH1dLAogICAgICBkZXNzZXJ0czogW10sCiAgICAgIGVkaXRlZEluZGV4OiAtMSwKICAgICAgZWRpdGVkSXRlbTogewogICAgICAgIGRhdGE6IDAsCiAgICAgICAgcGFyc2U6IDAsCiAgICAgICAgc3BpZGVyOiAwLAogICAgICAgIHRocmVhZF9zcGlkZXI6IDAsCiAgICAgICAgYXJ0aWNsZTogMAogICAgICB9LAogICAgICBkZWZhdWx0SXRlbTogewogICAgICAgIGRhdGE6IDAsCiAgICAgICAgYXJ0aWNsZXM6IDIxLAogICAgICAgIHN1Y2Nlc3NfcGFyc2U6IDAsCiAgICAgICAgdW5zdWNjZXNzX3BhcnNlOiAwLAogICAgICAgIG1pc3NlZF9hcnRpY2xlczogMCwKICAgICAgICBkb3dubG9hZF9sYXRlbmN5OiAwLAogICAgICAgIHNwaWRlcnM6IDAsCiAgICAgICAgdGhyZWFkczogMCwKICAgICAgICB0aW1lX2ZpbmlzaDogMCwKICAgICAgICBkYXRlOiBudWxsCiAgICAgIH0KICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7CiAgICBmb3JtVGl0bGU6IGZ1bmN0aW9uIGZvcm1UaXRsZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuZWRpdGVkSW5kZXggPT09IC0xID8gIk5ldyBJdGVtIiA6ICJFZGl0IEl0ZW0iOwogICAgfQogIH0sIG1hcEdldHRlcnMoWyJnZXRTY3JhcGVycyIsICJnZXRDcmF3bGVyU2V0cyJdKSksCiAgd2F0Y2g6IHsKICAgIGRpYWxvZzogZnVuY3Rpb24gZGlhbG9nKHZhbCkgewogICAgICB2YWwgfHwgdGhpcy5jbG9zZSgpOwogICAgfSwKICAgIGRpYWxvZ0RlbGV0ZTogZnVuY3Rpb24gZGlhbG9nRGVsZXRlKHZhbCkgewogICAgICB2YWwgfHwgdGhpcy5jbG9zZURlbGV0ZSgpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMubW91bnRDcmF3bGVyU2V0cygpOwogICAgdGhpcy5tb3VudFNjcmFwZXJzKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRDb2xvcjogZnVuY3Rpb24gZ2V0Q29sb3IocGFyc2UpIHsKICAgICAgaWYgKHBhcnNlIDwgMjAwKSByZXR1cm4gInJlZCI7ZWxzZSBpZiAocGFyc2UgPiA0MDApIHJldHVybiAiZ3JlZW4iO2Vsc2UgcmV0dXJuICJvcmFuZ2UiOwogICAgfSwKICAgIGVkaXRJdGVtOiBmdW5jdGlvbiBlZGl0SXRlbShpdGVtKSB7CiAgICAgIHRoaXMuZWRpdGVkSW5kZXggPSB0aGlzLmRlc3NlcnRzLmluZGV4T2YoaXRlbSk7CiAgICAgIHRoaXMuZWRpdGVkSXRlbSA9IE9iamVjdC5hc3NpZ24oe30sIGl0ZW0pOwogICAgICB0aGlzLmRpYWxvZyA9IHRydWU7CiAgICB9LAogICAgZGVsZXRlSXRlbTogZnVuY3Rpb24gZGVsZXRlSXRlbShpdGVtKSB7CiAgICAgIHRoaXMuZWRpdGVkSW5kZXggPSB0aGlzLmRlc3NlcnRzLmluZGV4T2YoaXRlbSk7CiAgICAgIHRoaXMuZWRpdGVkSXRlbSA9IE9iamVjdC5hc3NpZ24oe30sIGl0ZW0pOwogICAgICB0aGlzLmRpYWxvZ0RlbGV0ZSA9IHRydWU7CiAgICB9LAogICAgZGVsZXRlSXRlbUNvbmZpcm06IGZ1bmN0aW9uIGRlbGV0ZUl0ZW1Db25maXJtKCkgewogICAgICB0aGlzLmRlc3NlcnRzLnNwbGljZSh0aGlzLmVkaXRlZEluZGV4LCAxKTsKICAgICAgdGhpcy5jbG9zZURlbGV0ZSgpOwogICAgfSwKICAgIGNsb3NlOiBmdW5jdGlvbiBjbG9zZSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuZGlhbG9nID0gZmFsc2U7CiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5lZGl0ZWRJdGVtID0gT2JqZWN0LmFzc2lnbih7fSwgX3RoaXMuZGVmYXVsdEl0ZW0pOwogICAgICAgIF90aGlzLmVkaXRlZEluZGV4ID0gLTE7CiAgICAgIH0pOwogICAgfSwKICAgIGNsb3NlRGVsZXRlOiBmdW5jdGlvbiBjbG9zZURlbGV0ZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmRpYWxvZ0RlbGV0ZSA9IGZhbHNlOwogICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMyLmVkaXRlZEl0ZW0gPSBPYmplY3QuYXNzaWduKHt9LCBfdGhpczIuZGVmYXVsdEl0ZW0pOwogICAgICAgIF90aGlzMi5lZGl0ZWRJbmRleCA9IC0xOwogICAgICB9KTsKICAgIH0sCiAgICBzYXZlOiBmdW5jdGlvbiBzYXZlKCkgewogICAgICBpZiAodGhpcy5lZGl0ZWRJbmRleCA+IC0xKSB7CiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLmRlc3NlcnRzW3RoaXMuZWRpdGVkSW5kZXhdLCB0aGlzLmVkaXRlZEl0ZW0pOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZGVzc2VydHMucHVzaCh0aGlzLmVkaXRlZEl0ZW0pOwogICAgICB9CgogICAgICB0aGlzLmNsb3NlKCk7CiAgICB9LAogICAgbW91bnRDcmF3bGVyU2V0czogZnVuY3Rpb24gbW91bnRDcmF3bGVyU2V0cygpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goImZldGNoQ3Jhd2xlclNldHMiKTsKICAgIH0sCiAgICBtb3VudFNjcmFwZXJzOiBmdW5jdGlvbiBtb3VudFNjcmFwZXJzKCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgiZmV0Y2hTY3JhcGVycyIpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Reports.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"getScrapers\"\n      sort-by=\"parse\"\n      class=\"elevation-1 mt-10 pt-10\"\n      dark\n    >\n      <template v-slot:top>\n        <v-toolbar flat>\n          <v-toolbar-title>Reports</v-toolbar-title>\n          <!-- <div v-for=\"item in getCrawlerSets\" :key=\"item.id\">\n            {{ item }}\n          </div> -->\n\n          <v-divider class=\"mx-4\" inset vertical></v-divider>\n          <v-spacer></v-spacer>\n          <!-- <v-dialog v-model=\"dialog\" max-width=\"500px\">\n          <template v-slot:activator=\"{ on, attrs }\">\n            <v-btn color=\"primary\" dark class=\"mb-2\" v-bind=\"attrs\" v-on=\"on\">\n              New Item\n            </v-btn>\n          </template>\n          <v-card>\n            <v-card-title>\n              <span class=\"headline\">{{ formTitle }}</span>\n            </v-card-title>\n\n            <v-card-text>\n              <v-container>\n                <v-row>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field\n                      v-model=\"editedItem.name\"\n                      label=\"Dessert name\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field\n                      v-model=\"editedItem.parse\"\n                      label=\"parse\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field\n                      v-model=\"editedItem.spider\"\n                      label=\"spider (g)\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field\n                      v-model=\"editedItem.thread_spider\"\n                      label=\"thread_spider (g)\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field\n                      v-model=\"editedItem.article\"\n                      label=\"article (g)\"\n                    ></v-text-field>\n                  </v-col>\n                </v-row>\n              </v-container>\n            </v-card-text>\n\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn color=\"blue darken-1\" text @click=\"close\"> Cancel </v-btn>\n              <v-btn color=\"blue darken-1\" text @click=\"save\"> Save </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog> -->\n          <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n            <v-card>\n              <v-card-title class=\"headline\"\n                >Are you sure you want to delete this item?</v-card-title\n              >\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"blue darken-1\" text @click=\"closeDelete\"\n                  >Cancel</v-btn\n                >\n                <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\"\n                  >OK</v-btn\n                >\n                <v-spacer></v-spacer>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n        </v-toolbar>\n      </template>\n      <template v-slot:item.data=\"{ item }\">\n        <span>{{ item.data }}</span>\n      </template>\n\n      <template v-slot:item.articles=\"{ item }\">\n        {{ item.crawler_set.total_articles }}\n      </template>\n\n      <template v-slot:item.success_parse=\"{ item }\">\n        <v-chip :color=\"getColor(item.crawler_set.total_parsed_article)\" dark>\n          {{ item.crawler_set.total_parsed_article }}\n        </v-chip>\n      </template>\n\n      <template v-slot:item.unsuccess_parse=\"{ item }\">\n        {{ item.crawler_set.total_error }}\n      </template>\n\n      <template v-slot:item.missed_articles=\"{ item }\">\n        {{ item.total_missed_articles }}\n      </template>\n\n      <template v-slot:item.download_latency=\"{ item }\">\n        {{ item.crawler_set.average_download_latency }}\n      </template>\n\n      <template v-slot:item.spiders=\"{ item }\">\n        <span>{{ item.workers }}</span>\n      </template>\n\n      <template v-slot:item.threads=\"{ item }\">\n        <span>{{ item.total_threads }}</span>\n      </template>\n\n      <template v-slot:item.time_finished=\"{ item }\">\n        <span>{{ item.time_finished }}</span>\n      </template>\n\n      <template v-slot:item.date=\"{ item }\">\n        <span>{{ item.timestamp }}</span>\n      </template>\n\n      <template v-slot:item.actions=\"{ item }\">\n        <v-icon small class=\"mr-2\" color=\"success\" @click=\"editItem(item)\">\n          mdi-pencil\n        </v-icon>\n        <v-icon small @click=\"deleteItem(item)\" color=\"red\">\n          mdi-delete\n        </v-icon>\n      </template>\n      <template v-slot:no-data>\n        <v-btn color=\"primary\"> Reset </v-btn>\n      </template>\n    </v-data-table>\n    <div style=\"color:white;\">\n      {{ getScrapers.length }}\n    </div>\n  </div>\n</template>\n<script>\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: () => ({\n    dialog: false,\n    dialogDelete: false,\n    headers: [\n      {\n        text: \"Data\",\n        align: \"center\",\n        sortable: true,\n        value: \"data\",\n      },\n      { text: \"Articles\", value: \"articles\" },\n      { text: \"Successful parsed articles\", value: \"success_parse\" },\n      { text: \"Unsuccessful parse articles\", value: \"unsuccess_parse\" },\n      { text: \"Missed articles\", value: \"missed_articles\" },\n      { text: \"Average download latency\", value: \"download_latency\" },\n      { text: \"Spiders\", value: \"spiders\" },\n      { text: \"Threads\", value: \"threads\" },\n      { text: \"Time finished\", value: \"time_finished\" },\n      { text: \"Date\", value: \"date\" },\n      { text: \"Actions\", value: \"actions\", sortable: false },\n    ],\n    desserts: [],\n    editedIndex: -1,\n    editedItem: {\n      data: 0,\n      parse: 0,\n      spider: 0,\n      thread_spider: 0,\n      article: 0,\n    },\n    defaultItem: {\n      data: 0,\n      articles: 21,\n      success_parse: 0,\n      unsuccess_parse: 0,\n      missed_articles: 0,\n      download_latency: 0,\n      spiders: 0,\n      threads: 0,\n      time_finish: 0,\n      date: null,\n    },\n  }),\n\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Item\" : \"Edit Item\";\n    },\n    ...mapGetters([\"getScrapers\", \"getCrawlerSets\"]),\n  },\n\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    },\n  },\n  mounted() {\n    this.mountCrawlerSets();\n    this.mountScrapers();\n  },\n\n  methods: {\n    getColor(parse) {\n      if (parse < 200) return \"red\";\n      else if (parse > 400) return \"green\";\n      else return \"orange\";\n    },\n\n    editItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n\n    deleteItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n\n    deleteItemConfirm() {\n      this.desserts.splice(this.editedIndex, 1);\n      this.closeDelete();\n    },\n\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    save() {\n      if (this.editedIndex > -1) {\n        Object.assign(this.desserts[this.editedIndex], this.editedItem);\n      } else {\n        this.desserts.push(this.editedItem);\n      }\n      this.close();\n    },\n    mountCrawlerSets() {\n      this.$store.dispatch(\"fetchCrawlerSets\");\n    },\n    mountScrapers() {\n      this.$store.dispatch(\"fetchScrapers\");\n    },\n  },\n};\n</script>\n\n<style>\n</style>"],"sourceRoot":"src/views/table"}]}