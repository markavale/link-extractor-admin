{"remainingRequest":"/home/markanthonyvale/dev/news-extractor-admin/frontend/djangovue-template/node_modules/babel-loader/lib/index.js!/home/markanthonyvale/dev/news-extractor-admin/frontend/djangovue-template/node_modules/eslint-loader/index.js??ref--13-0!/home/markanthonyvale/dev/news-extractor-admin/frontend/djangovue-template/src/api/axiosConfig.js","dependencies":[{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/djangovue-template/src/api/axiosConfig.js","mtime":1615443081681},{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/djangovue-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/djangovue-template/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/djangovue-template/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IENvb2tpZXMgZnJvbSAnanMtY29va2llJzsgLy8gaW1wb3J0IHsgc3RhdGUgfSBmcm9tICdAL3N0b3JlL21vZHVsZXMvdXNlcicKLy8gY29uc3QgQVBJVXJsUHJvZHVjdGlvbiA9ICdodHRwczovL21hcmthbnRob255dmFsZS5oZXJva3VhcHAuY29tLycKCnZhciBBUElVcmxEZXZlbG9wbWVudCA9ICdodHRwOi8vbG9jYWxob3N0OjgwMDAvJzsKdmFyIEFQSVVybCA9IEFQSVVybERldmVsb3BtZW50OyAvLyBheGlvcy5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsnQXV0aG9yaXphdGlvbiddID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJyk7Ci8vIGF4aW9zLmRlZmF1bHRzLmhlYWRlcnMucG9zdFsnQ29udGVudC1UeXBlJ10gPSAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJzsKLy8gTWFrZSBBeGlvcyBwbGF5IG5pY2Ugd2l0aCBEamFuZ28gQ1NSRgovLyBheGlvcy5kZWZhdWx0cy54c3JmQ29va2llTmFtZSA9ICdjc3JmdG9rZW4nCi8vIGF4aW9zLmRlZmF1bHRzLnhzcmZIZWFkZXJOYW1lID0gJ1gtQ1NSRlRva2VuJwoKdmFyIGF4aW9zQmFzZSA9IGF4aW9zLmNyZWF0ZSh7CiAgYmFzZVVSTDogQVBJVXJsLAogIGhlYWRlcnM6IHsKICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAnWC1DU1JGVG9rZW4nOiBDb29raWVzLmdldCgnY3NyZnRva2VuJykKICB9Cn0pOwp2YXIgZ2V0QVBJID0gYXhpb3MuY3JlYXRlKHsKICBiYXNlVVJMOiBBUElVcmwKfSk7IC8vIGdldEFQSS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKHVuZGVmaW5lZCwgZnVuY3Rpb24gKGVycikgewovLyAgIC8vIGlmIGVycm9yIHJlc3BvbnNlIHN0YXR1cyBpcyA0MDEsIGl0IG1lYW5zIHRoZSByZXF1ZXN0IHdhcyBpbnZhbGlkIGR1ZSB0byBleHBpcmVkIGFjY2VzcyB0b2tlbgovLyAgIGlmIChlcnIuY29uZmlnICYmIGVyci5yZXNwb25zZSAmJiBlcnIucmVzcG9uc2Uuc3RhdHVzID09PSA0MDEpIHsKLy8gICAgIHN0b3JlLmRpc3BhdGNoKCdyZWZyZXNoVG9rZW4nKSAvLyBhdHRlbXB0IHRvIG9idGFpbiBuZXcgYWNjZXNzIHRva2VuIGJ5IHJ1bm5pbmcgJ3JlZnJlc2hUb2tlbicgYWN0aW9uCi8vICAgICAgIC50aGVuKGFjY2VzcyA9PiB7Ci8vICAgICAgICAgLy8gaWYgc3VjY2Vzc2Z1bCByZS1zZW5kIHRoZSByZXF1ZXN0IHRvIGdldCB0aGUgZGF0YSBmcm9tIHNlcnZlcgovLyAgICAgICAgIGF4aW9zLnJlcXVlc3QoewovLyAgICAgICAgICAgYmFzZVVSTDogQVBJVXJsLAovLyAgICAgICAgICAgbWV0aG9kOiAnZ2V0JywKLy8gICAgICAgICAgIGhlYWRlcnM6IHsgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2FjY2Vzc31gIH0sIC8vIHRoZSBuZXcgYWNjZXNzIHRva2VuIGlzIGF0dGFjaGVkIHRvIHRoZSBhdXRob3JpemF0aW9uIGhlYWRlcgovLyAgICAgICAgICAgdXJsOiAnL21vZHMvJwovLyAgICAgICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4gewovLyAgICAgICAgICAgLy8gaWYgc3VjY2Vzc2Z1bGx5IHJlY2VpdmVkIHRoZSBkYXRhIHN0b3JlIGl0IGluIHN0b3JlLnN0YXRlLkFQSURhdGEgc28gdGhhdCAnRG93bmxvYWRzJyBjb21wb25lbnQgY2FuIGdyYWIgdGhlCi8vICAgICAgICAgICAvLyBkYXRhIGZyb20gaXQgYW5kIGRpc3BsYXkgdG8gdGhlIGNsaWVudC4KLy8gICAgICAgICAgIGNvbnNvbGUubG9nKCdTdWNjZXNzIGdldHRpbmcgdGhlIE1vZHMnKQovLyAgICAgICAgICAgc3RvcmUuc3RhdGUuQVBJRGF0YSA9IHJlc3BvbnNlLmRhdGEKLy8gICAgICAgICB9KS5jYXRjaChlcnIgPT4gewovLyAgICAgICAgICAgY29uc29sZS5sb2coJ0dvdCB0aGUgbmV3IGFjY2VzcyB0b2tlbiBidXQgZXJyb3Igd2hpbGUgdHJ5aW5nIHRvIGZldGNoIGRhdGEgZnJvbSB0aGUgQVBJIHVzaW5nIGl0JykKLy8gICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnIpCi8vICAgICAgICAgfSkKLy8gICAgICAgfSkKLy8gICAgICAgLmNhdGNoKGVyciA9PiB7Ci8vICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycikKLy8gICAgICAgfSkKLy8gICB9Ci8vIH0pCi8vIGV4cG9ydCB7IGF4aW9zQmFzZSwgZ2V0QVBJIH0KCmV4cG9ydCB7IGF4aW9zQmFzZSwgZ2V0QVBJIH07"},{"version":3,"sources":["/home/markanthonyvale/dev/news-extractor-admin/frontend/djangovue-template/src/api/axiosConfig.js"],"names":["axios","Cookies","APIUrlDevelopment","APIUrl","axiosBase","create","baseURL","headers","get","getAPI"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;AACA;;AACA,IAAMC,iBAAiB,GAAG,wBAA1B;AACA,IAAMC,MAAM,GAAGD,iBAAf,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,IAAME,SAAS,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAEH,MADkB;AAE3BI,EAAAA,OAAO,EAAE;AACL,oBAAgB,kBADX;AAEL,mBAAeN,OAAO,CAACO,GAAR,CAAY,WAAZ;AAFV;AAFkB,CAAb,CAAlB;AAOA,IAAMC,MAAM,GAAGT,KAAK,CAACK,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAEH;AADe,CAAb,CAAf,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,SAASC,SAAT,EAAoBK,MAApB","sourcesContent":["import axios from 'axios'\nimport Cookies from 'js-cookie'\n// import { state } from '@/store/modules/user'\n// const APIUrlProduction = 'https://markanthonyvale.herokuapp.com/'\nconst APIUrlDevelopment = 'http://localhost:8000/'\nconst APIUrl = APIUrlDevelopment\n\n// axios.defaults.headers.common['Authorization'] = localStorage.getItem('token');\n// axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n// Make Axios play nice with Django CSRF\n// axios.defaults.xsrfCookieName = 'csrftoken'\n// axios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nconst axiosBase = axios.create({\n    baseURL: APIUrl,\n    headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n    }\n})\nconst getAPI = axios.create({\n    baseURL: APIUrl\n})\n\n\n\n// getAPI.interceptors.response.use(undefined, function (err) {\n//   // if error response status is 401, it means the request was invalid due to expired access token\n//   if (err.config && err.response && err.response.status === 401) {\n//     store.dispatch('refreshToken') // attempt to obtain new access token by running 'refreshToken' action\n//       .then(access => {\n//         // if successful re-send the request to get the data from server\n//         axios.request({\n//           baseURL: APIUrl,\n//           method: 'get',\n//           headers: { Authorization: `Bearer ${access}` }, // the new access token is attached to the authorization header\n//           url: '/mods/'\n//         }).then(response => {\n//           // if successfully received the data store it in store.state.APIData so that 'Downloads' component can grab the\n//           // data from it and display to the client.\n//           console.log('Success getting the Mods')\n//           store.state.APIData = response.data\n//         }).catch(err => {\n//           console.log('Got the new access token but error while trying to fetch data from the API using it')\n//           return Promise.reject(err)\n//         })\n//       })\n//       .catch(err => {\n//         return Promise.reject(err)\n//       })\n//   }\n// })\n\n// export { axiosBase, getAPI }\nexport { axiosBase, getAPI }"]}]}