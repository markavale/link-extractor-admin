{"remainingRequest":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/src/views/table/Reports.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/src/views/table/Reports.vue","mtime":1618447936581},{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIGltcG9ydCBtb21lbnQgZnJvbSAibW9tZW50IjsKaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gInZ1ZXgiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogKCkgPT4gKHsKICAgIGV4cGFuZGVkOiBbXSwKICAgIGRpYWxvZzogZmFsc2UsCiAgICBkaWFsb2dEZWxldGU6IGZhbHNlLAogICAgaGVhZGVyczogWwogICAgICB7IHRleHQ6ICIiLCB2YWx1ZTogImRhdGEtdGFibGUtZXhwYW5kIiB9LAogICAgICB7CiAgICAgICAgdGV4dDogIkRhdGEiLAogICAgICAgIGFsaWduOiAiY2VudGVyIiwKICAgICAgICBzb3J0YWJsZTogdHJ1ZSwKICAgICAgICB2YWx1ZTogImRhdGEiLAogICAgICB9LAogICAgICB7IHRleHQ6ICJBcnRpY2xlcyIsIGFsaWduOiAiY2VudGVyIiwgdmFsdWU6ICJhcnRpY2xlcyIgfSwKICAgICAgeyB0ZXh0OiAiU3VjY2Vzc2Z1bCBhcnRpY2xlcyIsIGFsaWduOiAiY2VudGVyIiwgdmFsdWU6ICJzdWNjZXNzX3BhcnNlIiB9LAogICAgICB7IHRleHQ6ICJFcnJvcnMiLCBhbGlnbjogImNlbnRlciIsIHZhbHVlOiAidW5zdWNjZXNzX3BhcnNlIiB9LAogICAgICB7IHRleHQ6ICJNaXNzZWQgYXJ0aWNsZXMiLCBhbGlnbjogImNlbnRlciIsIHZhbHVlOiAibWlzc2VkX2FydGljbGVzIiB9LAogICAgICB7IHRleHQ6ICJEb3dubG9hZCBsYXRlbmN5IiwgYWxpZ246ICJjZW50ZXIiLCB2YWx1ZTogImRvd25sb2FkX2xhdGVuY3kiIH0sCiAgICAgIHsgdGV4dDogIlNwaWRlcnMiLCBhbGlnbjogImNlbnRlciIsIHZhbHVlOiAic3BpZGVycyIgfSwKICAgICAgeyB0ZXh0OiAiUHJvY2VzcyBzdGF0dXMiLCBhbGlnbjogImNlbnRlciIsIHZhbHVlOiAidGhyZWFkcyIgfSwKICAgICAgeyB0ZXh0OiAiVGltZSBmaW5pc2hlZCIsIGFsaWduOiAiY2VudGVyIiwgdmFsdWU6ICJ0aW1lX2ZpbmlzaGVkIiB9LAogICAgICB7IHRleHQ6ICJEYXRlIiwgYWxpZ246ICJjZW50ZXIiLCB2YWx1ZTogImRhdGUiIH0sCiAgICAgIHsgdGV4dDogIkFjdGlvbnMiLCB2YWx1ZTogImFjdGlvbnMiLCBzb3J0YWJsZTogZmFsc2UgfSwKICAgIF0sCiAgICBkZXNzZXJ0czogW10sCiAgICBlZGl0ZWRJbmRleDogLTEsCiAgICBlZGl0ZWRJdGVtOiB7CiAgICAgIGRhdGE6IDAsCiAgICAgIHBhcnNlOiAwLAogICAgICBzcGlkZXI6IDAsCiAgICAgIHRocmVhZF9zcGlkZXI6IDAsCiAgICAgIGFydGljbGU6IDAsCiAgICB9LAogICAgZGVmYXVsdEl0ZW06IHsKICAgICAgZGF0YTogMCwKICAgICAgYXJ0aWNsZXM6IDIxLAogICAgICBzdWNjZXNzX3BhcnNlOiAwLAogICAgICB1bnN1Y2Nlc3NfcGFyc2U6IDAsCiAgICAgIG1pc3NlZF9hcnRpY2xlczogMCwKICAgICAgZG93bmxvYWRfbGF0ZW5jeTogMCwKICAgICAgc3BpZGVyczogMCwKICAgICAgdGhyZWFkczogMCwKICAgICAgdGltZV9maW5pc2g6IDAsCiAgICAgIGRhdGU6IG51bGwsCiAgICB9LAogIH0pLAoKICBjb21wdXRlZDogewogICAgLy8gZm9ybURhdGUodmFsdWUpIHsKICAgIC8vICAgaWYgKHZhbHVlKSB7CiAgICAvLyAgICAgcmV0dXJuIG1vbWVudChTdHJpbmcodmFsdWUpKS5mb3JtYXQoIk1NL0REL1lZWVkgaGg6bW0iKTsKICAgIC8vICAgfQogICAgLy8gfSwKICAgIGZvcm1UaXRsZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuZWRpdGVkSW5kZXggPT09IC0xID8gIk5ldyBJdGVtIiA6ICJFZGl0IEl0ZW0iOwogICAgfSwKICAgIC4uLm1hcEdldHRlcnMoWyJnZXRTY3JhcGVycyIsICJnZXRDcmF3bGVyU2V0cyJdKSwKICB9LAoKICB3YXRjaDogewogICAgZGlhbG9nKHZhbCkgewogICAgICB2YWwgfHwgdGhpcy5jbG9zZSgpOwogICAgfSwKICAgIGRpYWxvZ0RlbGV0ZSh2YWwpIHsKICAgICAgdmFsIHx8IHRoaXMuY2xvc2VEZWxldGUoKTsKICAgIH0sCiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5tb3VudENyYXdsZXJTZXRzKCk7CiAgICB0aGlzLm1vdW50U2NyYXBlcnMoKTsKICB9LAoKICBtZXRob2RzOiB7CiAgICB2aWV3SW5zdGFuY2UoaXRlbSl7CiAgICAgIGNvbnNvbGUubG9nKGl0ZW0uaWQpCiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHtuYW1lOiAncmVwb3J0LWluc3RhbmNlJywgcGFyYW1zOiB7aWQ6IGl0ZW0uaWR9fSkgIAogICAgfSwKICAgIGdldENvbG9yKGl0ZW0pIHsKICAgICAgaWYgKGl0ZW0uY3Jhd2xlcl9zZXQucGFyc2VyX3BlcmNlbnRhZ2UgPCA3NSkgcmV0dXJuICJyZWQiOwogICAgICBlbHNlIGlmIChpdGVtLmNyYXdsZXJfc2V0LnBhcnNlcl9wZXJjZW50YWdlID4gOTApIHJldHVybiAiZ3JlZW4iOwogICAgICBlbHNlIHJldHVybiAib3JhbmdlIjsKICAgIH0sCgogICAgZWRpdEl0ZW0oaXRlbSkgewogICAgICB0aGlzLmVkaXRlZEluZGV4ID0gdGhpcy5kZXNzZXJ0cy5pbmRleE9mKGl0ZW0pOwogICAgICB0aGlzLmVkaXRlZEl0ZW0gPSBPYmplY3QuYXNzaWduKHt9LCBpdGVtKTsKICAgICAgdGhpcy5kaWFsb2cgPSB0cnVlOwogICAgfSwKCiAgICBkZWxldGVJdGVtKGl0ZW0pIHsKICAgICAgdGhpcy5lZGl0ZWRJbmRleCA9IHRoaXMuZGVzc2VydHMuaW5kZXhPZihpdGVtKTsKICAgICAgdGhpcy5lZGl0ZWRJdGVtID0gT2JqZWN0LmFzc2lnbih7fSwgaXRlbSk7CiAgICAgIHRoaXMuZGlhbG9nRGVsZXRlID0gdHJ1ZTsKICAgIH0sCgogICAgZGVsZXRlSXRlbUNvbmZpcm0oKSB7CiAgICAgIHRoaXMuZGVzc2VydHMuc3BsaWNlKHRoaXMuZWRpdGVkSW5kZXgsIDEpOwogICAgICB0aGlzLmNsb3NlRGVsZXRlKCk7CiAgICB9LAoKICAgIGNsb3NlKCkgewogICAgICB0aGlzLmRpYWxvZyA9IGZhbHNlOwogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdGhpcy5lZGl0ZWRJdGVtID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5kZWZhdWx0SXRlbSk7CiAgICAgICAgdGhpcy5lZGl0ZWRJbmRleCA9IC0xOwogICAgICB9KTsKICAgIH0sCgogICAgY2xvc2VEZWxldGUoKSB7CiAgICAgIHRoaXMuZGlhbG9nRGVsZXRlID0gZmFsc2U7CiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICB0aGlzLmVkaXRlZEl0ZW0gPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmRlZmF1bHRJdGVtKTsKICAgICAgICB0aGlzLmVkaXRlZEluZGV4ID0gLTE7CiAgICAgIH0pOwogICAgfSwKCiAgICBzYXZlKCkgewogICAgICBpZiAodGhpcy5lZGl0ZWRJbmRleCA+IC0xKSB7CiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLmRlc3NlcnRzW3RoaXMuZWRpdGVkSW5kZXhdLCB0aGlzLmVkaXRlZEl0ZW0pOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZGVzc2VydHMucHVzaCh0aGlzLmVkaXRlZEl0ZW0pOwogICAgICB9CiAgICAgIHRoaXMuY2xvc2UoKTsKICAgIH0sCiAgICBtb3VudENyYXdsZXJTZXRzKCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgiZmV0Y2hDcmF3bGVyU2V0cyIpOwogICAgfSwKICAgIG1vdW50U2NyYXBlcnMoKSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJmZXRjaFNjcmFwZXJzIik7CiAgICB9LAoKICAgIC8qKgogICAgICogSW4gYSByZWFsIGFwcGxpY2F0aW9uIHRoaXMgd291bGQgYmUgYSBjYWxsIHRvIGZldGNoKCkgb3IgYXhpb3MuZ2V0KCkKICAgICAqLwogICAgLy8gZmFrZUFwaUNhbGwgKCkgewogICAgLy8gICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgLy8gICAgIGNvbnN0IHsgc29ydEJ5LCBzb3J0RGVzYywgcGFnZSwgaXRlbXNQZXJQYWdlIH0gPSB0aGlzLm9wdGlvbnMKCiAgICAvLyAgICAgbGV0IGl0ZW1zID0gdGhpcy5nZXREZXNzZXJ0cygpCiAgICAvLyAgICAgY29uc3QgdG90YWwgPSBpdGVtcy5sZW5ndGgKCiAgICAvLyAgICAgaWYgKHNvcnRCeS5sZW5ndGggPT09IDEgJiYgc29ydERlc2MubGVuZ3RoID09PSAxKSB7CiAgICAvLyAgICAgICBpdGVtcyA9IGl0ZW1zLnNvcnQoKGEsIGIpID0+IHsKICAgIC8vICAgICAgICAgY29uc3Qgc29ydEEgPSBhW3NvcnRCeVswXV0KICAgIC8vICAgICAgICAgY29uc3Qgc29ydEIgPSBiW3NvcnRCeVswXV0KCiAgICAvLyAgICAgICAgIGlmIChzb3J0RGVzY1swXSkgewogICAgLy8gICAgICAgICAgIGlmIChzb3J0QSA8IHNvcnRCKSByZXR1cm4gMQogICAgLy8gICAgICAgICAgIGlmIChzb3J0QSA+IHNvcnRCKSByZXR1cm4gLTEKICAgIC8vICAgICAgICAgICByZXR1cm4gMAogICAgLy8gICAgICAgICB9IGVsc2UgewogICAgLy8gICAgICAgICAgIGlmIChzb3J0QSA8IHNvcnRCKSByZXR1cm4gLTEKICAgIC8vICAgICAgICAgICBpZiAoc29ydEEgPiBzb3J0QikgcmV0dXJuIDEKICAgIC8vICAgICAgICAgICByZXR1cm4gMAogICAgLy8gICAgICAgICB9CiAgICAvLyAgICAgICB9KQogICAgLy8gICAgIH0KCiAgICAvLyAgICAgaWYgKGl0ZW1zUGVyUGFnZSA+IDApIHsKICAgIC8vICAgICAgIGl0ZW1zID0gaXRlbXMuc2xpY2UoKHBhZ2UgLSAxKSAqIGl0ZW1zUGVyUGFnZSwgcGFnZSAqIGl0ZW1zUGVyUGFnZSkKICAgIC8vICAgICB9CgogICAgLy8gICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgLy8gICAgICAgcmVzb2x2ZSh7CiAgICAvLyAgICAgICAgIGl0ZW1zLAogICAgLy8gICAgICAgICB0b3RhbCwKICAgIC8vICAgICAgIH0pCiAgICAvLyAgICAgfSwgMTAwMCkKICAgIC8vICAgfSkKICAgIC8vIH0sCiAgfSwKfTsK"},{"version":3,"sources":["Reports.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Reports.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <div>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"getScrapers\"\n      sort-by=\"parse\"\n      class=\"elevation-1 mt-10 pt-10\"\n      show-expand\n      :single-expand=\"true\"\n      :expanded.sync=\"expanded\"\n      dark\n    >\n      <template v-slot:top>\n        <v-toolbar flat>\n          <v-toolbar-title>Scraping Logs</v-toolbar-title>\n          <!-- <div v-for=\"item in getCrawlerSets\" :key=\"item.id\">\n            {{ item }}\n          </div> -->\n          <v-divider class=\"mx-4\" inset vertical></v-divider>\n          <v-spacer></v-spacer>\n          <v-tooltip top>\n            <template v-slot:activator=\"{ on, attrs }\">\n              <download-excel\n                \n                class=\"\"\n                :data=\"getScrapers\"\n                worksheet=\"My Worksheet\"\n                name=\"scraping_analysis.xls\"\n              >\n                <v-btn color=\"#31BE7D\" v-bind=\"attrs\"\n                v-on=\"on\" class=\"ma-2 white--text\" fab small>\n                  <v-icon dark> mdi-microsoft-excel </v-icon>\n                </v-btn>\n              </download-excel>\n            </template>\n            <span>Export to excel file</span>\n          </v-tooltip>\n          <!-- <v-dialog v-model=\"dialog\" max-width=\"500px\">\n          <template v-slot:activator=\"{ on, attrs }\">\n            <v-btn color=\"primary\" dark class=\"mb-2\" v-bind=\"attrs\" v-on=\"on\">\n              New Item\n            </v-btn>\n          </template>\n          <v-card>\n            <v-card-title>\n              <span class=\"headline\">{{ formTitle }}</span>\n            </v-card-title>\n\n            <v-card-text>\n              <v-container>\n                <v-row>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field\n                      v-model=\"editedItem.name\"\n                      label=\"Dessert name\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field\n                      v-model=\"editedItem.parse\"\n                      label=\"parse\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field\n                      v-model=\"editedItem.spider\"\n                      label=\"spider (g)\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field\n                      v-model=\"editedItem.thread_spider\"\n                      label=\"thread_spider (g)\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field\n                      v-model=\"editedItem.article\"\n                      label=\"article (g)\"\n                    ></v-text-field>\n                  </v-col>\n                </v-row>\n              </v-container>\n            </v-card-text>\n\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn color=\"blue darken-1\" text @click=\"close\"> Cancel </v-btn>\n              <v-btn color=\"blue darken-1\" text @click=\"save\"> Save </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog> -->\n          <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n            <v-card>\n              <v-card-title class=\"headline\"\n                >Are you sure you want to delete this item?</v-card-title\n              >\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"blue darken-1\" text @click=\"closeDelete\"\n                  >Cancel</v-btn\n                >\n                <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\"\n                  >OK</v-btn\n                >\n                <v-spacer></v-spacer>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n        </v-toolbar>\n      </template>\n\n      <template v-slot:expanded-item=\"{headers, item }\">\n        <td :colspan=\"headers.length\">\n          <v-row no-gutters style=\"flex-wrap: nowrap\">\n          <v-col cols=\"6\"\n          class=\"flex-grow-0 flex-shrink-1\"\n          >\n            <v-container>\n              <v-card\n              class=\"overflow-y-auto\"\n                color=\"#385F73\"\n                dark\n                height=\"330px\"\n                max-width=\"750px\"\n              >\n                <v-card-title class=\"headline\"\n                  ><v-icon class=\"mr-2\">info</v-icon>Info logs\n                </v-card-title>\n                <v-card-text\n                  class=\"pa-0 mx-5\"\n                  v-for=\"(text, index) in item.info_log.split(`\\\\n'`)\"\n                  :key=\"index\"\n                  >{{ text }}</v-card-text\n                >\n\n                <!-- <v-card-actions>\n                  <v-btn text> View logs </v-btn>\n                </v-card-actions> -->\n              </v-card>\n            </v-container>\n          </v-col>\n          <v-col cols=\"6\"\n          class=\"flex-grow-0 flex-shrink-1\"\n          >\n            <v-container>\n              <v-card color=\"#db645c\" dark\n               class=\"overflow-y-auto\"\n                height=\"330px\"\n                max-width=\"750px\"\n              >\n                <v-card-title class=\"headline\">\n                  <v-icon class=\"mr-2\">error</v-icon>Error logs\n                </v-card-title>\n\n                <v-card-text\n                  class=\"pa-0 mx-5\"\n                  v-for=\"(text, index) in item.error_log.split(`\\\\n'`)\"\n                  :key=\"index\"                  \n                  ><span v-if=\"text == '[]'\">\n                    No errors\n                    </span>\n                    <span v-else>{{ text }}</span></v-card-text\n                >\n\n                <!-- <v-card-actions>\n                  <v-btn text> View logs </v-btn>\n                </v-card-actions> -->\n              </v-card>\n            </v-container>\n          </v-col>\n        </v-row>\n        </td>\n      </template>\n\n      <template v-slot:item.data=\"{ item }\">\n        <span>{{ item.data }}</span>\n      </template>\n\n      <template v-slot:item.articles=\"{ item }\">\n        {{ item.crawler_set.total_articles }}\n      </template>\n\n      <template v-slot:item.success_parse=\"{ item }\">\n        <v-chip :color=\"getColor(item)\" dark>\n          {{ item.crawler_set.total_parsed_article }}\n        </v-chip>\n      </template>\n\n      <template v-slot:item.unsuccess_parse=\"{ item }\">\n        {{ item.crawler_set.total_error }}\n      </template>\n\n      <template v-slot:item.missed_articles=\"{ item }\">\n        {{ item.total_missed_articles }}\n      </template>\n\n      <template v-slot:item.download_latency=\"{ item }\">\n        {{ item.crawler_set.average_download_latency }}\n      </template>\n\n      <template v-slot:item.spiders=\"{ item }\">\n        <span>{{ item.workers }}</span>\n      </template>\n\n      <template v-slot:item.threads=\"{ item }\">\n        <span v-if=\"item.terminated_process\" class=\"red--text\">Terminated</span>\n        <span v-else class=\"green--text\">Completed</span>\n      </template>\n\n      <template v-slot:item.time_finished=\"{ item }\">\n        <span>{{ item.time_finished }}</span>\n      </template>\n\n      <template v-slot:item.date=\"{ item }\">\n        <span>{{ item.timestamp | formatDate }}</span>\n      </template>\n\n      <template v-slot:item.actions=\"{ item }\">\n        <v-icon small class=\"mr-2\" color=\"primary\" @click=\"viewInstance(item)\">\n          mdi-eye\n        </v-icon>\n        <v-icon small class=\"mr-2\" color=\"success\" @click=\"editItem(item)\">\n          mdi-pencil\n        </v-icon>\n        <v-icon small @click=\"deleteItem(item)\" color=\"red\">\n          mdi-delete\n        </v-icon>\n      </template>\n      <template v-slot:no-data>\n        loading...\n        <!-- <v-btn color=\"primary\"> Reset </v-btn> -->\n      </template>\n    </v-data-table>\n  </div>\n</template>\n<script>\n// import moment from \"moment\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: () => ({\n    expanded: [],\n    dialog: false,\n    dialogDelete: false,\n    headers: [\n      { text: \"\", value: \"data-table-expand\" },\n      {\n        text: \"Data\",\n        align: \"center\",\n        sortable: true,\n        value: \"data\",\n      },\n      { text: \"Articles\", align: \"center\", value: \"articles\" },\n      { text: \"Successful articles\", align: \"center\", value: \"success_parse\" },\n      { text: \"Errors\", align: \"center\", value: \"unsuccess_parse\" },\n      { text: \"Missed articles\", align: \"center\", value: \"missed_articles\" },\n      { text: \"Download latency\", align: \"center\", value: \"download_latency\" },\n      { text: \"Spiders\", align: \"center\", value: \"spiders\" },\n      { text: \"Process status\", align: \"center\", value: \"threads\" },\n      { text: \"Time finished\", align: \"center\", value: \"time_finished\" },\n      { text: \"Date\", align: \"center\", value: \"date\" },\n      { text: \"Actions\", value: \"actions\", sortable: false },\n    ],\n    desserts: [],\n    editedIndex: -1,\n    editedItem: {\n      data: 0,\n      parse: 0,\n      spider: 0,\n      thread_spider: 0,\n      article: 0,\n    },\n    defaultItem: {\n      data: 0,\n      articles: 21,\n      success_parse: 0,\n      unsuccess_parse: 0,\n      missed_articles: 0,\n      download_latency: 0,\n      spiders: 0,\n      threads: 0,\n      time_finish: 0,\n      date: null,\n    },\n  }),\n\n  computed: {\n    // formDate(value) {\n    //   if (value) {\n    //     return moment(String(value)).format(\"MM/DD/YYYY hh:mm\");\n    //   }\n    // },\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Item\" : \"Edit Item\";\n    },\n    ...mapGetters([\"getScrapers\", \"getCrawlerSets\"]),\n  },\n\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    },\n  },\n  mounted() {\n    this.mountCrawlerSets();\n    this.mountScrapers();\n  },\n\n  methods: {\n    viewInstance(item){\n      console.log(item.id)\n      this.$router.push({name: 'report-instance', params: {id: item.id}})  \n    },\n    getColor(item) {\n      if (item.crawler_set.parser_percentage < 75) return \"red\";\n      else if (item.crawler_set.parser_percentage > 90) return \"green\";\n      else return \"orange\";\n    },\n\n    editItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n\n    deleteItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n\n    deleteItemConfirm() {\n      this.desserts.splice(this.editedIndex, 1);\n      this.closeDelete();\n    },\n\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    save() {\n      if (this.editedIndex > -1) {\n        Object.assign(this.desserts[this.editedIndex], this.editedItem);\n      } else {\n        this.desserts.push(this.editedItem);\n      }\n      this.close();\n    },\n    mountCrawlerSets() {\n      this.$store.dispatch(\"fetchCrawlerSets\");\n    },\n    mountScrapers() {\n      this.$store.dispatch(\"fetchScrapers\");\n    },\n\n    /**\n     * In a real application this would be a call to fetch() or axios.get()\n     */\n    // fakeApiCall () {\n    //   return new Promise((resolve, reject) => {\n    //     const { sortBy, sortDesc, page, itemsPerPage } = this.options\n\n    //     let items = this.getDesserts()\n    //     const total = items.length\n\n    //     if (sortBy.length === 1 && sortDesc.length === 1) {\n    //       items = items.sort((a, b) => {\n    //         const sortA = a[sortBy[0]]\n    //         const sortB = b[sortBy[0]]\n\n    //         if (sortDesc[0]) {\n    //           if (sortA < sortB) return 1\n    //           if (sortA > sortB) return -1\n    //           return 0\n    //         } else {\n    //           if (sortA < sortB) return -1\n    //           if (sortA > sortB) return 1\n    //           return 0\n    //         }\n    //       })\n    //     }\n\n    //     if (itemsPerPage > 0) {\n    //       items = items.slice((page - 1) * itemsPerPage, page * itemsPerPage)\n    //     }\n\n    //     setTimeout(() => {\n    //       resolve({\n    //         items,\n    //         total,\n    //       })\n    //     }, 1000)\n    //   })\n    // },\n  },\n};\n</script>\n\n<style scoped>\n.truncate {\n      max-width: 1px;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n</style>"]}]}