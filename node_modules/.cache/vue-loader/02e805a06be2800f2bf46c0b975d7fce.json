{"remainingRequest":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/src/views/table/Reports.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/src/views/table/Reports.vue","mtime":1616750702767},{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICJ2dWV4IjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6ICgpID0+ICh7CiAgICBkaWFsb2c6IGZhbHNlLAogICAgZGlhbG9nRGVsZXRlOiBmYWxzZSwKICAgIGhlYWRlcnM6IFsKICAgICAgewogICAgICAgIHRleHQ6ICJEYXRhIiwKICAgICAgICBhbGlnbjogImNlbnRlciIsCiAgICAgICAgc29ydGFibGU6IHRydWUsCiAgICAgICAgdmFsdWU6ICJkYXRhIiwKICAgICAgfSwKICAgICAgeyB0ZXh0OiAiQXJ0aWNsZXMiLCB2YWx1ZTogImFydGljbGVzIiB9LAogICAgICB7IHRleHQ6ICJTdWNjZXNzZnVsIHBhcnNlZCBhcnRpY2xlcyIsIHZhbHVlOiAic3VjY2Vzc19wYXJzZSIgfSwKICAgICAgeyB0ZXh0OiAiVW5zdWNjZXNzZnVsIHBhcnNlIGFydGljbGVzIiwgdmFsdWU6ICJ1bnN1Y2Nlc3NfcGFyc2UiIH0sCiAgICAgIHsgdGV4dDogIk1pc3NlZCBhcnRpY2xlcyIsIHZhbHVlOiAibWlzc2VkX2FydGljbGVzIiB9LAogICAgICB7IHRleHQ6ICJBdmVyYWdlIGRvd25sb2FkIGxhdGVuY3kiLCB2YWx1ZTogImRvd25sb2FkX2xhdGVuY3kiIH0sCiAgICAgIHsgdGV4dDogIlNwaWRlcnMiLCB2YWx1ZTogInNwaWRlcnMiIH0sCiAgICAgIHsgdGV4dDogIlRocmVhZHMiLCB2YWx1ZTogInRocmVhZHMiIH0sCiAgICAgIHsgdGV4dDogIlRpbWUgZmluaXNoZWQiLCB2YWx1ZTogInRpbWVfZmluaXNoZWQiIH0sCiAgICAgIHsgdGV4dDogIkRhdGUiLCB2YWx1ZTogImRhdGUiIH0sCiAgICAgIHsgdGV4dDogIkFjdGlvbnMiLCB2YWx1ZTogImFjdGlvbnMiLCBzb3J0YWJsZTogZmFsc2UgfSwKICAgIF0sCiAgICBkZXNzZXJ0czogW10sCiAgICBlZGl0ZWRJbmRleDogLTEsCiAgICBlZGl0ZWRJdGVtOiB7CiAgICAgIGRhdGE6IDAsCiAgICAgIHBhcnNlOiAwLAogICAgICBzcGlkZXI6IDAsCiAgICAgIHRocmVhZF9zcGlkZXI6IDAsCiAgICAgIGFydGljbGU6IDAsCiAgICB9LAogICAgZGVmYXVsdEl0ZW06IHsKICAgICAgZGF0YTogMCwKICAgICAgYXJ0aWNsZXM6IDIxLAogICAgICBzdWNjZXNzX3BhcnNlOiAwLAogICAgICB1bnN1Y2Nlc3NfcGFyc2U6IDAsCiAgICAgIG1pc3NlZF9hcnRpY2xlczogMCwKICAgICAgZG93bmxvYWRfbGF0ZW5jeTogMCwKICAgICAgc3BpZGVyczogMCwKICAgICAgdGhyZWFkczogMCwKICAgICAgdGltZV9maW5pc2g6IDAsCiAgICAgIGRhdGU6IG51bGwsCiAgICB9LAogIH0pLAoKICBjb21wdXRlZDogewogICAgZm9ybVRpdGxlKCkgewogICAgICByZXR1cm4gdGhpcy5lZGl0ZWRJbmRleCA9PT0gLTEgPyAiTmV3IEl0ZW0iIDogIkVkaXQgSXRlbSI7CiAgICB9LAogICAgLi4ubWFwR2V0dGVycyhbImdldFNjcmFwZXJzIiwgImdldENyYXdsZXJTZXRzIl0pLAogIH0sCgogIHdhdGNoOiB7CiAgICBkaWFsb2codmFsKSB7CiAgICAgIHZhbCB8fCB0aGlzLmNsb3NlKCk7CiAgICB9LAogICAgZGlhbG9nRGVsZXRlKHZhbCkgewogICAgICB2YWwgfHwgdGhpcy5jbG9zZURlbGV0ZSgpOwogICAgfSwKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLm1vdW50Q3Jhd2xlclNldHMoKTsKICAgIHRoaXMubW91bnRTY3JhcGVycygpOwogIH0sCgogIG1ldGhvZHM6IHsKICAgIGdldENvbG9yKHBhcnNlKSB7CiAgICAgIGlmIChwYXJzZSA8IDIwMCkgcmV0dXJuICJyZWQiOwogICAgICBlbHNlIGlmIChwYXJzZSA+IDQwMCkgcmV0dXJuICJncmVlbiI7CiAgICAgIGVsc2UgcmV0dXJuICJvcmFuZ2UiOwogICAgfSwKCiAgICBlZGl0SXRlbShpdGVtKSB7CiAgICAgIHRoaXMuZWRpdGVkSW5kZXggPSB0aGlzLmRlc3NlcnRzLmluZGV4T2YoaXRlbSk7CiAgICAgIHRoaXMuZWRpdGVkSXRlbSA9IE9iamVjdC5hc3NpZ24oe30sIGl0ZW0pOwogICAgICB0aGlzLmRpYWxvZyA9IHRydWU7CiAgICB9LAoKICAgIGRlbGV0ZUl0ZW0oaXRlbSkgewogICAgICB0aGlzLmVkaXRlZEluZGV4ID0gdGhpcy5kZXNzZXJ0cy5pbmRleE9mKGl0ZW0pOwogICAgICB0aGlzLmVkaXRlZEl0ZW0gPSBPYmplY3QuYXNzaWduKHt9LCBpdGVtKTsKICAgICAgdGhpcy5kaWFsb2dEZWxldGUgPSB0cnVlOwogICAgfSwKCiAgICBkZWxldGVJdGVtQ29uZmlybSgpIHsKICAgICAgdGhpcy5kZXNzZXJ0cy5zcGxpY2UodGhpcy5lZGl0ZWRJbmRleCwgMSk7CiAgICAgIHRoaXMuY2xvc2VEZWxldGUoKTsKICAgIH0sCgogICAgY2xvc2UoKSB7CiAgICAgIHRoaXMuZGlhbG9nID0gZmFsc2U7CiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICB0aGlzLmVkaXRlZEl0ZW0gPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmRlZmF1bHRJdGVtKTsKICAgICAgICB0aGlzLmVkaXRlZEluZGV4ID0gLTE7CiAgICAgIH0pOwogICAgfSwKCiAgICBjbG9zZURlbGV0ZSgpIHsKICAgICAgdGhpcy5kaWFsb2dEZWxldGUgPSBmYWxzZTsKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIHRoaXMuZWRpdGVkSXRlbSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuZGVmYXVsdEl0ZW0pOwogICAgICAgIHRoaXMuZWRpdGVkSW5kZXggPSAtMTsKICAgICAgfSk7CiAgICB9LAoKICAgIHNhdmUoKSB7CiAgICAgIGlmICh0aGlzLmVkaXRlZEluZGV4ID4gLTEpIHsKICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMuZGVzc2VydHNbdGhpcy5lZGl0ZWRJbmRleF0sIHRoaXMuZWRpdGVkSXRlbSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5kZXNzZXJ0cy5wdXNoKHRoaXMuZWRpdGVkSXRlbSk7CiAgICAgIH0KICAgICAgdGhpcy5jbG9zZSgpOwogICAgfSwKICAgIG1vdW50Q3Jhd2xlclNldHMoKSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJmZXRjaENyYXdsZXJTZXRzIik7CiAgICB9LAogICAgbW91bnRTY3JhcGVycygpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goImZldGNoU2NyYXBlcnMiKTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["Reports.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Reports.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <div>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"getScrapers\"\n      sort-by=\"parse\"\n      class=\"elevation-1 mt-10 pt-10\"\n      dark\n    >\n      <template v-slot:top>\n        <v-toolbar flat>\n          <v-toolbar-title>Reports</v-toolbar-title>\n          <!-- <div v-for=\"item in getCrawlerSets\" :key=\"item.id\">\n            {{ item }}\n          </div> -->\n\n          <v-divider class=\"mx-4\" inset vertical></v-divider>\n          <v-spacer></v-spacer>\n          <!-- <v-dialog v-model=\"dialog\" max-width=\"500px\">\n          <template v-slot:activator=\"{ on, attrs }\">\n            <v-btn color=\"primary\" dark class=\"mb-2\" v-bind=\"attrs\" v-on=\"on\">\n              New Item\n            </v-btn>\n          </template>\n          <v-card>\n            <v-card-title>\n              <span class=\"headline\">{{ formTitle }}</span>\n            </v-card-title>\n\n            <v-card-text>\n              <v-container>\n                <v-row>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field\n                      v-model=\"editedItem.name\"\n                      label=\"Dessert name\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field\n                      v-model=\"editedItem.parse\"\n                      label=\"parse\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field\n                      v-model=\"editedItem.spider\"\n                      label=\"spider (g)\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field\n                      v-model=\"editedItem.thread_spider\"\n                      label=\"thread_spider (g)\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                    <v-text-field\n                      v-model=\"editedItem.article\"\n                      label=\"article (g)\"\n                    ></v-text-field>\n                  </v-col>\n                </v-row>\n              </v-container>\n            </v-card-text>\n\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn color=\"blue darken-1\" text @click=\"close\"> Cancel </v-btn>\n              <v-btn color=\"blue darken-1\" text @click=\"save\"> Save </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog> -->\n          <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n            <v-card>\n              <v-card-title class=\"headline\"\n                >Are you sure you want to delete this item?</v-card-title\n              >\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"blue darken-1\" text @click=\"closeDelete\"\n                  >Cancel</v-btn\n                >\n                <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\"\n                  >OK</v-btn\n                >\n                <v-spacer></v-spacer>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n        </v-toolbar>\n      </template>\n      <template v-slot:item.data=\"{ item }\">\n        <span>{{ item.data }}</span>\n      </template>\n\n      <template v-slot:item.articles=\"{ item }\">\n        {{ item.crawler_set.total_articles }}\n      </template>\n\n      <template v-slot:item.success_parse=\"{ item }\">\n        <v-chip :color=\"getColor(item.crawler_set.total_parsed_article)\" dark>\n          {{ item.crawler_set.total_parsed_article }}\n        </v-chip>\n      </template>\n\n      <template v-slot:item.unsuccess_parse=\"{ item }\">\n        {{ item.crawler_set.total_error }}\n      </template>\n\n      <template v-slot:item.missed_articles=\"{ item }\">\n        {{ item.total_missed_articles }}\n      </template>\n\n      <template v-slot:item.download_latency=\"{ item }\">\n        {{ item.crawler_set.average_download_latency }}\n      </template>\n\n      <template v-slot:item.spiders=\"{ item }\">\n        <span>{{ item.workers }}</span>\n      </template>\n\n      <template v-slot:item.threads=\"{ item }\">\n        <span>{{ item.total_threads }}</span>\n      </template>\n\n      <template v-slot:item.time_finished=\"{ item }\">\n        <span>{{ item.time_finished }}</span>\n      </template>\n\n      <template v-slot:item.date=\"{ item }\">\n        <span>{{ item.timestamp }}</span>\n      </template>\n\n      <template v-slot:item.actions=\"{ item }\">\n        <v-icon small class=\"mr-2\" color=\"success\" @click=\"editItem(item)\">\n          mdi-pencil\n        </v-icon>\n        <v-icon small @click=\"deleteItem(item)\" color=\"red\">\n          mdi-delete\n        </v-icon>\n      </template>\n      <template v-slot:no-data>\n        <v-btn color=\"primary\"> Reset </v-btn>\n      </template>\n    </v-data-table>\n    <div style=\"color:white;\">\n      {{ getScrapers.length }}\n    </div>\n  </div>\n</template>\n<script>\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: () => ({\n    dialog: false,\n    dialogDelete: false,\n    headers: [\n      {\n        text: \"Data\",\n        align: \"center\",\n        sortable: true,\n        value: \"data\",\n      },\n      { text: \"Articles\", value: \"articles\" },\n      { text: \"Successful parsed articles\", value: \"success_parse\" },\n      { text: \"Unsuccessful parse articles\", value: \"unsuccess_parse\" },\n      { text: \"Missed articles\", value: \"missed_articles\" },\n      { text: \"Average download latency\", value: \"download_latency\" },\n      { text: \"Spiders\", value: \"spiders\" },\n      { text: \"Threads\", value: \"threads\" },\n      { text: \"Time finished\", value: \"time_finished\" },\n      { text: \"Date\", value: \"date\" },\n      { text: \"Actions\", value: \"actions\", sortable: false },\n    ],\n    desserts: [],\n    editedIndex: -1,\n    editedItem: {\n      data: 0,\n      parse: 0,\n      spider: 0,\n      thread_spider: 0,\n      article: 0,\n    },\n    defaultItem: {\n      data: 0,\n      articles: 21,\n      success_parse: 0,\n      unsuccess_parse: 0,\n      missed_articles: 0,\n      download_latency: 0,\n      spiders: 0,\n      threads: 0,\n      time_finish: 0,\n      date: null,\n    },\n  }),\n\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Item\" : \"Edit Item\";\n    },\n    ...mapGetters([\"getScrapers\", \"getCrawlerSets\"]),\n  },\n\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    },\n  },\n  mounted() {\n    this.mountCrawlerSets();\n    this.mountScrapers();\n  },\n\n  methods: {\n    getColor(parse) {\n      if (parse < 200) return \"red\";\n      else if (parse > 400) return \"green\";\n      else return \"orange\";\n    },\n\n    editItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n\n    deleteItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n\n    deleteItemConfirm() {\n      this.desserts.splice(this.editedIndex, 1);\n      this.closeDelete();\n    },\n\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    save() {\n      if (this.editedIndex > -1) {\n        Object.assign(this.desserts[this.editedIndex], this.editedItem);\n      } else {\n        this.desserts.push(this.editedItem);\n      }\n      this.close();\n    },\n    mountCrawlerSets() {\n      this.$store.dispatch(\"fetchCrawlerSets\");\n    },\n    mountScrapers() {\n      this.$store.dispatch(\"fetchScrapers\");\n    },\n  },\n};\n</script>\n\n<style>\n</style>"]}]}