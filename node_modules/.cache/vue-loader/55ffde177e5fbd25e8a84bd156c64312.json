{"remainingRequest":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/src/views/Dashboard.vue?vue&type=template&id=3a8bd061&","dependencies":[{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/src/views/Dashboard.vue","mtime":1616015318669},{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/markanthonyvale/dev/news-extractor-admin/frontend/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXY+CiAgPHYtcm93PgogICAgPHYtY29sIGxnPSI0IiBjb2xzPSJzbSIgY2xhc3M9InBiLTIiPgogICAgICA8di1jYXJkIGRhcmsgY29sb3I9IiMyMzIzMjMiPgogICAgICAgIDx2LXJvdyBjbGFzcz0ibm8tZ3V0dGVycyI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtYXV0byI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImN5YW4gZmlsbC1oZWlnaHQiPiZuYnNwOzwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wgcGEtMyBweS00IGN5YW4tLXRleHQiPgogICAgICAgICAgICA8aDUgY2xhc3M9InRleHQtdHJ1bmNhdGUgdGV4dC11cHBlcmNhc2UiPlRvdGFsIHBhcnNlZCBkYXRhPC9oNT4KICAgICAgICAgICAgPGgxPgogICAgICAgICAgICAgIDwhLS0ge3sgZ2V0UGFnZVZpZXdzLnRvdGFsX3ZpZXdzIH19IC0tPgogICAgICAgICAgICAgIDUsMTgwCiAgICAgICAgICAgIDwvaDE+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3Ytcm93PgogICAgICA8L3YtY2FyZD4KICAgIDwvdi1jb2w+CiAgICA8di1jb2wgbGc9IjQiIGNvbHM9InNtIiBjbGFzcz0icGItMiI+CiAgICAgIDx2LWNhcmQgZGFyayBjb2xvcj0iIzIzMjMyMyI+CiAgICAgICAgPHYtcm93IGNsYXNzPSJuby1ndXR0ZXJzIj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1hdXRvIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJpbWFyeSBmaWxsLWhlaWdodCI+Jm5ic3A7PC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbCBwYS0zIHB5LTQgcHJpbWFyeS0tdGV4dCI+CiAgICAgICAgICAgIDxoNSBjbGFzcz0idGV4dC10cnVuY2F0ZSB0ZXh0LXVwcGVyY2FzZSI+QXZlcmFnZSBEb3dubG9hZCBsYXRlbmN5PC9oNT4KICAgICAgICAgICAgPCEtLSA8aDE+e3sgZ2V0UmF0aW5ncy5yYXRpbmdfY29tcHV0ZWQgfX08L2gxPiAtLT4KICAgICAgICAgICAgPGgxPjguMzwvaDE+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3Ytcm93PgogICAgICA8L3YtY2FyZD4KICAgIDwvdi1jb2w+CiAgICA8di1jb2wgbGc9IjQiIGNvbHM9InNtIiBjbGFzcz0icGItMiI+CiAgICAgIDx2LWNhcmQgZGFyayBjb2xvcj0iIzIzMjMyMyI+CiAgICAgICAgPHYtcm93IGNsYXNzPSJuby1ndXR0ZXJzIj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1hdXRvIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VjY2VzcyBmaWxsLWhlaWdodCI+Jm5ic3A7PC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbCBwYS0zIHB5LTQgc3VjY2Vzcy0tdGV4dCI+CiAgICAgICAgICAgIDxoNSBjbGFzcz0idGV4dC10cnVuY2F0ZSB0ZXh0LXVwcGVyY2FzZSI+U3VjY2VzcyBwYXJzZWQgZGF0YTwvaDU+CiAgICAgICAgICAgIDxoMT4zLDQ2NDwvaDE+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3Ytcm93PgogICAgICA8L3YtY2FyZD4KICAgIDwvdi1jb2w+CiAgPC92LXJvdz4KICA8IS0tIDx2LXJvdz4KICAgIDx2LWNvbCBsZz0iNCIgY29scz0ibWQiIGNsYXNzPSJwYi0yIj4KICAgICAgPHYtY2FyZCBjbGFzcz0iZGFyayIgZGFyayBjb2xvcj0iIzIzMjMyMyI+CiAgICAgICAgPHYtY2FyZC10aXRsZSBjbGFzcz0iZm9udC13ZWlnaHQtbGlnaHQgdGV4dC10cnVuY2F0ZSBjeWFuLS10ZXh0Ij4KICAgICAgICAgIE9yZGVycwogICAgICAgIDwvdi1jYXJkLXRpdGxlPgogICAgICAgIDx2LWNhcmQtdGV4dD4KICAgICAgICAgIDx2LWNhcm91c2VsCiAgICAgICAgICAgIGN5Y2xlCiAgICAgICAgICAgIGhlaWdodD0iMTgwIgogICAgICAgICAgICBpbnRlcnZhbD0iMjAwMCIKICAgICAgICAgICAgaGlkZS1kZWxpbWl0ZXItYmFja2dyb3VuZAogICAgICAgICAgICBzaG93LWFycm93cy1vbi1ob3ZlcgogICAgICAgICAgPgogICAgICAgICAgICA8di1jYXJvdXNlbC1pdGVtPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBuby1ndXR0ZXJzIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbCI+CiAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJjeWFuLS10ZXh0Ij5SYW5keSBTaGVldHM8L2gyPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtdC0xIj5UdXRhbmt1bSwgV0kgMzMxOTI8L3A+CiAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJtYi0wIj4KICAgICAgICAgICAgICAgICAgICAgICQyMTcuMDAKICAgICAgICAgICAgICAgICAgICAgIDxpCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtZGkgbWRpLTM2cHggbWRpLWNyZWRpdC1jYXJkLW91dGxpbmUgZmxvYXQtcmlnaHQiCiAgICAgICAgICAgICAgICAgICAgICA+PC9pPgogICAgICAgICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgICAgICAgPHA+VG90YWwgaXRlbXM6IDU8L3A+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvdi1jYXJvdXNlbC1pdGVtPgogICAgICAgICAgICA8di1jYXJvdXNlbC1pdGVtPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBuby1ndXR0ZXJzIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbCI+CiAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJjeWFuLS10ZXh0Ij5Kb3NlIFZhbGRleDwvaDI+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im10LTEiPlR1cm51cCwgUEEgMjMxOTI8L3A+CiAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJtYi0wIj4KICAgICAgICAgICAgICAgICAgICAgICQ5Ny4wMAogICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Im1kaSBtZGktMzZweCBtZGktcGF5cGFsIGZsb2F0LXJpZ2h0Ij48L2k+CiAgICAgICAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICAgICAgICA8cD5Ub3RhbCBpdGVtczogMjwvcD4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC92LWNhcm91c2VsLWl0ZW0+CiAgICAgICAgICA8L3YtY2Fyb3VzZWw+CiAgICAgICAgPC92LWNhcmQtdGV4dD4KICAgICAgPC92LWNhcmQ+CiAgICA8L3YtY29sPgogICAgPHYtY29sIGxnPSI0IiBjb2xzPSJtZCIgY2xhc3M9InBiLTIiPgogICAgICA8di1jYXJkIG1pbi1oZWlnaHQ9IjI1MiIgZGFyayBjb2xvcj0iIzIzMjMyMyI+CiAgICAgICAgPHYtY2FyZC10aXRsZSBjbGFzcz0iZm9udC13ZWlnaHQtbGlnaHQgdGV4dC10cnVuY2F0ZSBwcmltYXJ5LS10ZXh0Ij4KICAgICAgICAgIEdvYWxzCiAgICAgICAgPC92LWNhcmQtdGl0bGU+CiAgICAgICAgPHYtY2FyZC10ZXh0PgogICAgICAgICAgPHAgY2xhc3M9InByaW1hcnktLXRleHQgc3VidGl0bGUtMSI+UmVzdWx0cyBmcm9tIGxhc3QgY2FtcGFpZ248L3A+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJteS01Ij4KICAgICAgICAgICAgPHYtcHJvZ3Jlc3MtbGluZWFyCiAgICAgICAgICAgICAgaW5kZXRlcm1pbmF0ZQogICAgICAgICAgICAgIGhlaWdodD0iOCIKICAgICAgICAgICAgICBjb2xvcj0icHJpbWFyeSIKICAgICAgICAgICAgPjwvdi1wcm9ncmVzcy1saW5lYXI+CiAgICAgICAgICAgIDxoNj5TSU5DRSBKQU4gMjAyMDwvaDY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3YtY2FyZC10ZXh0PgogICAgICAgIDx2LWNhcmQtYWN0aW9ucz4KICAgICAgICAgIDx2LWJ0biBvdXRsaW5lZCByb3VuZGVkIGNvbG9yPSJwcmltYXJ5Ij4gRGV0YWlscyA8L3YtYnRuPgogICAgICAgIDwvdi1jYXJkLWFjdGlvbnM+CiAgICAgIDwvdi1jYXJkPgogICAgPC92LWNvbD4KICAgIDx2LWNvbCBsZz0iNCIgY29scz0ibWQiIGNsYXNzPSJwYi0yIj4KICAgICAgPHYtY2FyZCBtaW4taGVpZ2h0PSIyNTIiIGRhcmsgY29sb3I9IiMyMzIzMjMiPgogICAgICAgIDx2LWNhcmQtdGl0bGUgY2xhc3M9ImZvbnQtd2VpZ2h0LWxpZ2h0IHRleHQtdHJ1bmNhdGUgc3VjY2Vzcy0tdGV4dCI+CiAgICAgICAgICBPbi1ib2FyZGluZwogICAgICAgIDwvdi1jYXJkLXRpdGxlPgogICAgICAgIDx2LWNhcmQtdGV4dD4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdWNjZXNzLS10ZXh0IHN1YnRpdGxlLTEiPiBKdWR5IFBpbmN1cyA8L3NwYW4+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtYi0zIj4KICAgICAgICAgICAgQGpwaW5jdXMKICAgICAgICAgICAgPGgzPlNlcnZpY2UgTWFuYWdlcjwvaDM+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvdmVybGluZSI+U3RhcnQgZGF0ZTogNS8xMi8yMDIwPC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC92LWNhcmQtdGV4dD4KICAgICAgICA8di1jYXJkLWFjdGlvbnM+CiAgICAgICAgICA8di1idG4gb3V0bGluZWQgcm91bmRlZCBjb2xvcj0ic3VjY2VzcyI+IFZpZXcgPC92LWJ0bj4KICAgICAgICA8L3YtY2FyZC1hY3Rpb25zPgogICAgICA8L3YtY2FyZD4KICAgIDwvdi1jb2w+CiAgPC92LXJvdz4gLS0+CiAgPHYtcm93PgogICAgPHYtY29sPgogICAgICA8di1jYXJkIGNsYXNzPSJteC1hdXRvIHRleHQtY2VudGVyIiBkYXJrIGNvbG9yPSIjMjMyMzIzIj4KICAgICAgICA8di1jYXJkLXRpdGxlIGNsYXNzPSJwcmltYXJ5LS10ZXh0Ij5QYXJzZWQgRGF0YTwvdi1jYXJkLXRpdGxlPgogICAgICAgIDx2LXNwYXJrbGluZQogICAgICAgICAgOnZhbHVlPSJzcGFya2xpbmVEYXRhIgogICAgICAgICAgcGFkZGluZz0iMTgiCiAgICAgICAgICBsYWJlbC1zaXplPSI0IgogICAgICAgICAgY29sb3I9ImN5YW4iCiAgICAgICAgICA6Z3JhZGllbnQ9IlsnIzAwN2JmZicsICdjeWFuJ10iCiAgICAgICAgICA6bGluZS13aWR0aD0iMiIKICAgICAgICAgIDpzdHJva2UtbGluZWNhcD0iJ3JvdW5kJyIKICAgICAgICAgIHNtb290aAogICAgICAgID4KICAgICAgICAgIDwhLS0gPHRlbXBsYXRlIHYtc2xvdDpsYWJlbD0iaXRlbSI+ICR7eyBpdGVtLnZhbHVlIH19IDwvdGVtcGxhdGU+IC0tPgogICAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDpsYWJlbD0iaXRlbSI+IHt7IGl0ZW0udmFsdWUgfX0gPC90ZW1wbGF0ZT4KICAgICAgICA8L3Ytc3BhcmtsaW5lPgogICAgICAgIDx2LWNhcmQtYWN0aW9ucyBjbGFzcz0icHktNCBqdXN0aWZ5LWNlbnRlciI+CiAgICAgICAgICA8di1idG4gY29sb3I9InByaW1hcnkiIHRvPSIvcmVwb3J0cyI+VmlldyBSZXBvcnQ8L3YtYnRuPgogICAgICAgIDwvdi1jYXJkLWFjdGlvbnM+CiAgICAgIDwvdi1jYXJkPgogICAgPC92LWNvbD4KICA8L3Ytcm93Pgo8L2Rpdj4K"},null]}